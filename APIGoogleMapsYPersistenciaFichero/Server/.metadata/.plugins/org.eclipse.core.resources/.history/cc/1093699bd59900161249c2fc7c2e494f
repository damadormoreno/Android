import java.io.InputStream;
import java.io.PrintStream;
import java.net.Socket;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

public class HiloCliente extends Thread{

Socket paquete;
	
	public HiloCliente(Socket paquete){
		this.paquete = paquete;
	}
	
	@Override
	public void run() {
		InputStream entrada = null;//leer
		PrintStream salida = null;//escribir
		
		try {
			//dame el canal de salida y creamos el objeto que escribe
			salida = new PrintStream(paquete.getOutputStream());
			//dame el canal de entrada
			//entrada = paquete.getInputStream();
			
			//Crear los objetos que lee del canal de entrada
			//InputStreamReader isr = new InputStreamReader(entrada);
			//BufferedReader bf = new BufferedReader(isr);
			
			//String sNumero = bf.readLine();
			//int iNumero = Integer.parseInt(sNumero);
			
			String cadenaJson = generarJsonAMano();

			salida.println(cadenaJson);
			System.out.println("Enviando: " + cadenaJson);
			//salida.flush();
			//Un close() hace un flush()
			salida.close();
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public String generarJsonAMano(){
		String s = null;
		StringBuilder sb = new StringBuilder();
		sb.append("{\"latitud\":");
		Random random = new Random();
		double resultadoLatitud = ThreadLocalRandom.current().nextDouble(-90,90);
		sb.append(resultadoLatitud);
		sb.append(",\"longitud\":");
		double resultadolongitud = ThreadLocalRandom.current().nextDouble(-180,180);
		sb.append(resultadolongitud);
		sb.append("}");

		s = sb.toString();
		
		return s;
	}
}
